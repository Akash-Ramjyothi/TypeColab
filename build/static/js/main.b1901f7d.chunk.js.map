{"version":3,"sources":["slateInitialValue.ts","SyncingEditor.tsx","GroupEditor.tsx","App.tsx","index.tsx"],"names":["initialValue","Value","fromJSON","document","nodes","object","type","text","socket","io","SyncingEditor","groupId","useState","value","setValue","id","useRef","Date","now","editor","remote","useEffect","fetch","then","x","json","data","eventName","on","editorId","ops","current","forEach","op","applyOperation","off","className","onMouseDown","e","preventDefault","toggleMark","href","ref","style","backgroundColor","width","maxWidth","minHeight","padding","renderMark","props","_editor","next","mark","children","onChange","opts","operations","filter","o","has","toJS","map","source","length","emit","toJSON","GroupEditor","match","params","App","exact","path","render","to","component","ReactDOM","getElementById"],"mappings":"sWAEaA,EAAeC,IAAMC,SAAS,CACzCC,SAAU,CACRC,MAAO,CACL,CACEC,OAAQ,QACRC,KAAM,YACNF,MAAO,CACL,CACEC,OAAQ,OACRE,KAAM,U,uPCJlB,IAAMC,EAASC,IAAG,2CAMLC,EAAiC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACnCC,mBAASZ,GAD0B,mBACtDa,EADsD,KAC/CC,EAD+C,KAEvDC,EAAKC,iBAAO,GAAD,OAAIC,KAAKC,QACpBC,EAASH,iBAAsB,MAC/BI,EAASJ,kBAAO,GA0BtB,OAxBAK,qBAAU,WACRC,MAAM,sDAAD,OAAuDX,IACzDY,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAG,GACJZ,EAASb,IAAMC,SAASwB,OAG5B,IAAMC,EAAS,gCAA4BhB,GAY3C,OAXAH,EAAOoB,GACLD,GACA,YAAgE,IAA7DE,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,IACPf,EAAGgB,UAAYF,IACjBT,EAAOW,SAAU,EACjBD,EAAIE,SAAQ,SAACC,GAAD,OAAad,EAAOY,QAASG,eAAeD,MACxDb,EAAOW,SAAU,MAKhB,WACLvB,EAAO2B,IAAIR,MAEZ,CAAChB,IAGF,oCACE,4BACEyB,UAAU,MACVC,YAAa,SAAAC,GACXA,EAAEC,iBACFpB,EAAOY,QAASS,WAAW,UAG7B,sCAEF,4BACEJ,UAAU,MACVC,YAAa,SAAAC,GACXA,EAAEC,iBACFpB,EAAOY,QAASS,WAAW,YAG7B,kCAEF,4BACEJ,UAAU,MACVC,YAAa,SAAAC,GACXA,EAAEC,iBACFpB,EAAOY,QAASS,WAAW,eAG7B,iCAGF,4BACEJ,UAAU,UAEV,uBAAGK,KAAK,gDAAR,gBAKF,kBAAC,IAAD,CACEC,IAAKvB,EACLwB,MAAO,CACLC,gBAAiB,UACjBC,MAAO,IACPC,SAAU,OACVC,UAAW,IACXC,QAAS,IAEXnC,MAAOA,EACPoC,WAAY,SAACC,EAAOC,EAASC,GAC3B,MAAwB,SAApBF,EAAMG,KAAK/C,KACN,gCAAS4C,EAAMI,UACO,WAApBJ,EAAMG,KAAK/C,KACb,4BAAK4C,EAAMI,UACW,cAApBJ,EAAMG,KAAK/C,KACb,2BAAI4C,EAAMI,UAEZF,KAETG,SAAU,SAAAC,GACR1C,EAAS0C,EAAK3C,OAEd,IAAMiB,EAAM0B,EAAKC,WACdC,QAAO,SAAAC,GACN,QAAIA,IAEW,kBAAXA,EAAErD,MACS,cAAXqD,EAAErD,QACAqD,EAAEjC,OAASiC,EAAEjC,KAAKkC,IAAI,eAM7BC,OACAC,KAAI,SAACH,GAAD,O,yVAAA,IAAkBA,EAAlB,CAAqBjC,KAAM,CAAEqC,OAAQ,YAExCjC,EAAIkC,SAAW5C,EAAOW,SACxBvB,EAAOyD,KAAK,iBAAkB,CAC5BpC,SAAUd,EAAGgB,QACbD,MACAjB,MAAO2C,EAAK3C,MAAMqD,SAClBvD,iBCvHDwD,G,OAET,SAAC,GAIE,IAFOpD,EAER,EAHJqD,MACEC,OAAUtD,GAGZ,OACE,uBAAKqB,UAAU,QACb,gBAAC,EAAD,CAAezB,QAASI,OCKfuD,EAfO,WACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,WACN,OAAO,kBAAC,IAAD,CAAUC,GAAE,iBAAYzD,KAAKC,YAGxC,kBAAC,IAAD,CAAOsD,KAAK,aAAaG,UAAWR,MCR1CS,IAASH,OAAO,kBAAC,EAAD,MAAStE,SAAS0E,eAAe,W","file":"static/js/main.b1901f7d.chunk.js","sourcesContent":["import { Value } from \"slate\";\n\nexport const initialValue = Value.fromJSON({\n  document: {\n    nodes: [\n      {\n        object: \"block\",\n        type: \"paragraph\",\n        nodes: [\n          {\n            object: \"text\",\n            text: \"\"\n          }\n        ]\n      }\n    ]\n  }\n});","import React, { useState, useRef, useEffect } from \"react\";\nimport { Editor } from \"slate-react\";\nimport { initialValue } from \"./slateInitialValue\";\nimport { Operation, Value } from \"slate\";\nimport io from \"socket.io-client\";\nimport \"./SyncingEditor.css\";\n\nconst socket = io(\"https://google-docs-clone.herokuapp.com\");\n\ninterface Props {\n  groupId: string;\n}\n\nexport const SyncingEditor: React.FC<Props> = ({ groupId }) => {\n  const [value, setValue] = useState(initialValue);\n  const id = useRef(`${Date.now()}`);\n  const editor = useRef<Editor | null>(null);\n  const remote = useRef(false);\n\n  useEffect(() => {\n    fetch(`https://google-docs-clone.herokuapp.com/api/groups/${groupId}`)\n      .then(x => x.json())\n      .then(data => {\n        setValue(Value.fromJSON(data));\n      });\n\n    const eventName = `new-remote-operations-${groupId}`;\n    socket.on(\n      eventName,\n      ({ editorId, ops }: { editorId: string; ops: Operation[] }) => {\n        if (id.current !== editorId) {\n          remote.current = true;\n          ops.forEach((op: any) => editor.current!.applyOperation(op));\n          remote.current = false;\n        }\n      }\n    );\n\n    return () => {\n      socket.off(eventName);\n    };\n  }, [groupId]);\n\n  return (\n    <>\n      <button\n        className=\"btn\"\n        onMouseDown={e => {\n          e.preventDefault();\n          editor.current!.toggleMark(\"bold\");\n        }}\n      >\n        <strong>B</strong>\n      </button>\n      <button\n        className=\"btn\"\n        onMouseDown={e => {\n          e.preventDefault();\n          editor.current!.toggleMark(\"italic\");\n        }}\n      >\n        <em>I</em>\n      </button>\n      <button\n        className=\"btn\"\n        onMouseDown={e => {\n          e.preventDefault();\n          editor.current!.toggleMark(\"underline\");\n        }}\n      >\n        <u>U</u>\n      </button>\n\n      <button\n        className=\"source\"\n      >\n        <a href=\"https://github.com/Akash-Ramjyothi/TypeColab\">\n        Source Code\n        </a>\n      </button>  \n\n      <Editor\n        ref={editor}\n        style={{\n          backgroundColor: \"#f8f8f8\",\n          width: 800,\n          maxWidth: \"80vw\",\n          minHeight: 750,\n          padding: 10\n        }}\n        value={value}\n        renderMark={(props, _editor, next) => {\n          if (props.mark.type === \"bold\") {\n            return <strong>{props.children}</strong>;\n          } else if (props.mark.type === \"italic\") {\n            return <em>{props.children}</em>;\n          } else if (props.mark.type === \"underline\") {\n            return <u>{props.children}</u>;\n          }\n          return next();\n        }}\n        onChange={opts => {\n          setValue(opts.value);\n\n          const ops = opts.operations\n            .filter(o => {\n              if (o) {\n                return (\n                  o.type !== \"set_selection\" &&\n                  o.type !== \"set_value\" &&\n                  (!o.data || !o.data.has(\"source\"))\n                );\n              }\n\n              return false;\n            })\n            .toJS()\n            .map((o: any) => ({ ...o, data: { source: \"one\" } }));\n\n          if (ops.length && !remote.current) {\n            socket.emit(\"new-operations\", {\n              editorId: id.current,\n              ops,\n              value: opts.value.toJSON(),\n              groupId\n            });\n          }\n        }}\n      />\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { SyncingEditor } from \"./SyncingEditor\";\nimport \"./GroupEditor.css\";\n\nexport const GroupEditor: React.FC<\n  RouteComponentProps<{ id: string }>\n> = ({\n  match: {\n    params: { id }\n  }\n}) => {\n  return (\n    <div className=\"root\">\n      <SyncingEditor groupId={id} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport { GroupEditor } from \"./GroupEditor\";\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Route\n        exact\n        path=\"/\"\n        render={() => {\n          return <Redirect to={`/group/${Date.now()}`} />;\n        }}\n      />\n      <Route path=\"/group/:id\" component={GroupEditor} />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}